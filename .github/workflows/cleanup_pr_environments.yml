name: Cleanup PR Environments

#
# This workflow will remove any existing integration/review environments that have be created as part
# of a Pull Request Review when the Pull Request is closed.
#

on:
  pull_request:
    types:
      - closed

jobs:
  clean:
    name: Cleanup Review apps
    runs-on: ubuntu-20.04

    steps:
      - name: Get temporary token for invalidating deployment(s)
        id: temp_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.OCTODEMOBOT_APPLICATION_ID_REPO_AUTOMATION }}
          application_private_key: ${{ secrets.OCTODEMOBOT_APPLICATION_KEY_REPO_AUTOMATION }}
          
      - name: Mark environments as inactive in GitHub
        uses: actions/github-script@v3
        with:
          github-token: ${{ steps.temp_token.outputs.token }}
          script: |
            console.log(context.payload.pull_request.head.ref)

            github.repos.listDeployments(
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.payload.pull_request.head.ref
              }
            ).then(deployments => {
              const promises = [];

              deployments.data.forEach(deployment => {
                promises.push(
                  github.repos.listDeploymentStatuses({
                    ...context.repo,
                    deployment_id: deployment.id,
                    per_page: 100,
                  }).then(statuses => {
                    if (statuses.data) {
                      // The first state is the most current state for the deployment
                      const currentState = statuses.data[0];
                      if (currentState !== 'failure') {
                        console.log(`Deployment: ${deployment.id}:${deployment.environment} transitioning to failure`);
                        
                        return github.repos.createDeploymentStatus({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          mediaType: {previews: ["flash", "ant-man"]},
                          deployment_id: deployment.id,
                          state: 'failure',
                          description: 'Pull Request Merged/Closed, removing review environment'
                        })
                      }
                    }
                  })
                );
              });

              return Promise.all(promises);
            });
