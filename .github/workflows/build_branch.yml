name:  Branch - Build, Test and Publish

on:
  push:
    branches-ignore:
      - main

# The name of the `Build (ubuntu 20.04, 1.8)` build is used as a required context inside the repository on protected
#  branches configuration. Any changes to the OS or Java version will need to be reflected in repository settings.

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-20.04', 'windows-latest']
        java: [ '11' ]

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          java-package: jdk

      # Utilize caching of the resolved plugins and dependencies from previous Maven builds to provide
      # faster builds when dependencies have not changed.
      - name: Cache Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          # Hash on the POM file as that would need to change to modify the dependencies or plugins in use
          key: mvn-${{ matrix.java }}-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            mvn-${{ matrix.java }}-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
            mvn-${{ matrix.java }}-${{ runner.os }}
            mvn-${{ matrix.java }}
            mvn-

      - name: Define Build Parameters
        id: build_params
        uses: actions/github-script@v2
        with:
          script: |
            const scriptPath = require('path').resolve('./.github/workflows/scripts/build_parameters.js')
              , buildParameters = require(scriptPath);
            ;
            buildParameters(context, core).injectBuildParameters();

      - name: Build Test and Package
        id: maven_build
        run: |
          mvn package -B -Dsha1="${{ steps.build_params.outputs.maven_sha1 }}" \
            -Dchangelist="${{ steps.build_params.outputs.maven_changelist }}" \
            -D"github.repository"="${{ steps.build_params.outputs.github_repository }}" \
            -D"container.image.name"="${{ steps.build_params.outputs.container_name }}"
        shell: bash 

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.os}}-${{matrix.java}}-${{github.sha}}.war
          path: target/*.war
          
      #
      # Publish the container if we successfully build under Linux
      #
      - name: Sign in to GitHub Container Registry
        if: matrix.os == 'ubuntu-20.04'
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.OCTODEMOBOT_GHPR_TOKEN }}
          registry: ghcr.io
      
      - name: Publish Docker image
        id: container_publish
        if: matrix.os == 'ubuntu-20.04'
        run: |
          docker push ${{ steps.maven_build.outputs.container_deployment_registry_tag }}

      - name: Publish Container as a Status
        id: container_image_status
        if: matrix.os == 'ubuntu-20.04'
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          state: success
          context: Container Image Published
          description: ${{ steps.maven_build.outputs.container_deployment_registry_tag }} ${{ steps.maven_build.outputs.container_registry }}
